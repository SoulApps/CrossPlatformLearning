<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAIAAAAAAAD//2Q==
</value>
  </data>
</root>